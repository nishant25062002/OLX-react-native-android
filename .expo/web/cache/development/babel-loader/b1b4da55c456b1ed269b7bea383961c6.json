{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.AppbarHeader = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _overlay = _interopRequireDefault(require(\"../../styles/overlay\"));\n\nvar _Appbar = require(\"./Appbar\");\n\nvar _shadow = _interopRequireDefault(require(\"../../styles/shadow\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _constants = require(\"../../constants\");\n\nvar _excluded = [\"statusBarHeight\", \"style\", \"dark\"],\n    _excluded2 = [\"height\", \"elevation\", \"backgroundColor\", \"zIndex\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AppbarHeader = function AppbarHeader(props) {\n  var _props$statusBarHeigh = props.statusBarHeight,\n      statusBarHeight = _props$statusBarHeigh === void 0 ? _constants.APPROX_STATUSBAR_HEIGHT : _props$statusBarHeigh,\n      style = props.style,\n      dark = props.dark,\n      rest = (0, _objectWithoutProperties2.default)(props, _excluded);\n  var _rest$theme = rest.theme,\n      isDarkTheme = _rest$theme.dark,\n      colors = _rest$theme.colors,\n      mode = _rest$theme.mode;\n\n  var _ref = _reactNative.StyleSheet.flatten(style) || {},\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? _Appbar.DEFAULT_APPBAR_HEIGHT : _ref$height,\n      _ref$elevation = _ref.elevation,\n      elevation = _ref$elevation === void 0 ? 4 : _ref$elevation,\n      customBackground = _ref.backgroundColor,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex,\n      restStyle = (0, _objectWithoutProperties2.default)(_ref, _excluded2);\n\n  var backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? (0, _overlay.default)(elevation, colors.surface) : colors.primary;\n  var Wrapper = typeof props.statusBarHeight === 'number' ? _reactNative.View : _reactNative.SafeAreaView;\n  return React.createElement(Wrapper, {\n    style: [{\n      backgroundColor: backgroundColor,\n      zIndex: zIndex,\n      elevation: elevation\n    }, (0, _shadow.default)(elevation)]\n  }, React.createElement(_Appbar.Appbar, _extends({\n    style: [{\n      height: height,\n      backgroundColor: backgroundColor,\n      marginTop: statusBarHeight\n    }, styles.appbar, restStyle],\n    dark: dark\n  }, rest)));\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nvar styles = _reactNative.StyleSheet.create({\n  appbar: {\n    elevation: 0\n  }\n});\n\nvar _default = (0, _theming.withTheme)(AppbarHeader);\n\nexports.default = _default;\nvar AppbarHeaderWithTheme = (0, _theming.withTheme)(AppbarHeader);\nexports.AppbarHeader = AppbarHeaderWithTheme;","map":{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","props","statusBarHeight","rest","dark","mode","height","elevation","backgroundColor","zIndex","restStyle","StyleSheet","customBackground","isDarkTheme","overlay","colors","Wrapper","shadow","marginTop","styles","appbar","withTheme","AppbarHeaderWithTheme"],"mappings":";;;;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,IAAMA,YAAY,GAAIC,SAAhBD,YAAgBC,CAAAA,KAAD,EAAkB;AACrC,8BAAA,KAAA,CAEEC,eAFF;AAAA,MAEEA,eAFF,sCAAM,kCAAN;AAAA,MAAM,KAAN,GAAA,KAAA,CAAM,KAAN;AAAA,MAAM,IAAN,GAAA,KAAA,CAAM,IAAN;AAAA,MAKKC,IALL,0CAAA,KAAA;AAQA,oBAA4CA,IAAI,CAAhD,KAAA;AAAA,MAAM,WAAN,eAAQC,IAAR;AAAA,MAAM,MAAN,eAAM,MAAN;AAAA,MAAmCC,IAAnC,eAAmCA,IAAnC;;AACA,aAMeM,wBAAAA,OAAAA,CAAAA,KAAAA,KANf,EAAA;AAAA,yBACEL,MADF;AAAA,MACEA,MADF,4BAAM,6BAAN;AAAA,4BAEEC,SAFF;AAAA,MAEEA,SAFF,+BAAM,CAAN;AAAA,MAAM,gBAAN,QAGEC,eAHF;AAAA,yBAIEC,MAJF;AAAA,MAIEA,MAJF,4BAAM,CAAN;AAAA,MAKKC,SALL;;AAOA,MAAMF,eAAe,GAAGI,gBAAgB,GAAA,gBAAA,GAEpCC,WAAW,IAAIR,IAAI,KAAnBQ,UAAAA,GACAC,sBAAO,SAAPA,EAAmBC,MAAM,CADzBF,OACAC,CADAD,GAEAE,MAAM,CArB2B,OAiBrC;AAMA,MAAMC,OAAO,GACX,OAAOf,KAAK,CAAZ,eAAA,KAAA,QAAA,GAAA,iBAAA,GADF,yBAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,KAAK,EACH,CACE;AAAEO,MAAAA,eAAF,EAAEA,eAAF;AAAmBC,MAAAA,MAAnB,EAAmBA,MAAnB;AAA2BF,MAAAA,SAAAA,EAAAA;AAA3B,KADF,EAEEU,qBAFF,SAEEA,CAFF;AAFJ,GAAA,EAQE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAE,CACL;AAAEX,MAAAA,MAAF,EAAEA,MAAF;AAAUE,MAAAA,eAAV,EAAUA,eAAV;AAA2BU,MAAAA,SAAS,EAAEhB;AAAtC,KADK,EAELiB,MAAM,CAFD,MAAA,EADT,SACS,CADT;AAME,IAAA,IAAI,EAAEf;AANR,GAAA,EATJ,IASI,CAAA,CARF,CADF;AAzBF,CAAA;;AA+CAJ,YAAY,CAAZA,WAAAA,GAAAA,eAAAA;;AAEA,IAAMmB,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNb,IAAAA,SAAS,EAAE;AADL;AADuB,CAAlB,CAAf;;eAMec,wBAAf,YAAeA,C;;;AAGf,IAAMC,qBAAqB,GAAGD,wBAA9B,YAA8BA,CAA9B","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport { DEFAULT_APPBAR_HEIGHT, Appbar } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = (props: Props) => {\n  const {\n    // Don't use default props since we check it to know whether we should use SafeAreaView\n    statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n    style,\n    dark,\n    ...rest\n  } = props;\n\n  const { dark: isDarkTheme, colors, mode } = rest.theme;\n  const {\n    height = DEFAULT_APPBAR_HEIGHT,\n    elevation = 4,\n    backgroundColor: customBackground,\n    zIndex = 0,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  // Let the user override the behaviour\n  const Wrapper =\n    typeof props.statusBarHeight === 'number' ? View : SafeAreaView;\n  return (\n    <Wrapper\n      style={\n        [\n          { backgroundColor, zIndex, elevation },\n          shadow(elevation),\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Appbar\n        style={[\n          { height, backgroundColor, marginTop: statusBarHeight },\n          styles.appbar,\n          restStyle,\n        ]}\n        dark={dark}\n        {...rest}\n      />\n    </Wrapper>\n  );\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nconst AppbarHeaderWithTheme = withTheme(AppbarHeader);\n// @component-docs ignore-next-line\nexport { AppbarHeaderWithTheme as AppbarHeader };\n"]},"metadata":{},"sourceType":"script"}